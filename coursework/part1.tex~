\section{Теоретическое обоснование. Определения}
  \subsection{Наблюдаемый временной ряд}
Пусть время наблюдения разбито на $N_t$ интервалов. В каждый момент {\itshape периода наблюдения(observation period)} $[1,N_t]$ 
может произойти некoторое 
событие({\itshape действие, event}) \footnote{ Чаще всего понимается, что в этот момент времени имеет место {\itshape начало} действия} из 
множества допустимых событий $\mathcal{E}$ ({\itshape event types}). Соответственно, каждому типу событий сопоставляется множество моментов 
времени $TS(\eA)$
$$TS(\eA) = \{T_{\eA,1}\dots T_{\eA,N_{\eA}}\},~~~ \eA\in\mathcal{E},~~~ 0\geqslant T_{\eA,i}\geqslant N_t~~ (i=1\dots N_{\eA})$$
.
  \subsection{Понятие критического интервала}
Во время поиска закономерностей в данных, нас интересуют отношения между распределениями отдельных событий. Если предположить, что в исходных
не существует никаких закономерностей, то каждое событие должно появляться независимо, от других; то есть распределение компонент должно быть 
независимым. Но паттерн характеризуется 
появлением своих компонент в одинаковом порядке, более того, временные интервалы, разделяющие компоненты, должны быть примерно одинаковыми.

Будем говорить, что события $\eA$ и $\eB$ связаны отношением {\itshape критического интервала (Critical Interval, CI)}, если, после появления 
события $\eA$ в момент времени $t$, существует интервал $[t+d_1,t+d_2],\ (d2\geqslant d1\geqslant0)$, содержащий $\eB$, чаще, 
чем это ожидается из предположения о независимости событий. Данную взаимосвязь будем обозначать, как $\eA[d_1, d_2]\eB$, 
или, короче, $(\eA\eB)$.

Далее раскроем понятие <<чаще чем это ожидается>>. Пусть $N_{\eA}$ и $N_{\eB}$~--- количество возникновений $\eA$ и $\eB$, соответственно, 
в течение $[1,N_t]$. $P(\eA)=N_{\eA}/N_t$~--- вероятность появления события $\eA$ в некоторый момент времени; 
$P(\neg\eA)=1-P(\eA)$, где
$P(\neg\eA)^d$~--- вероятность, что $\eA$ не появится в течение какого-либо интервала $[d_1,d_2],~(d=d_2-d_1+1)$, длины $d$. 
Вероятность наблюдать $\eA$ на
интервале длины $d$ один или более раз, равна $1-P(\neg\eA)^d$. 

Зафиксируем события $\eA$, $\eB$, и длину интервала $d$. Приняв гипотезу о независимом распределении событий, событие $\eB$,
содержится\footnote{Один или более раз. } в интервале длины $d$, после события $\eA$,~ $N_{\eA}*(1-P(\neg\eB)^d)$ раз.
$$\rho=P(\geqslant N_{\eA\eB})=1-P(<N_{\eA\eB})$$~---~априорная вероятность  того, что $N_{\eA\eB}$ из $N_\eA$ интервалов содержат вхождения $\eB$.
Очевидно, что $P(<N_{\eA\eB})$  распределено по биномиальному закону, где $N_{\eA}$~---~количество <<испытаний>>, 
$1-P(\neg\eB)^d$~---~вероятность <<успеха>>. Следовательно, 
$$\rho = P(\geqslant N_{\eA\eB}) = 1 - \sum_{i=0}^{N_{\eA\eB}-1}C_{N_{\eA}}^i( 1-P(\neg\eB)^d )^iP(\neg\eB)^{N_{\eA}-i}$$.

Полученная вероятность $\rho$ сравнивается с пороговым значением $\alpha$, являющимся структурным параметром поиска: если $\rho\leqslant\alpha$,
то заданный интервал признается критическим. Заметим, что $\rho$ зависит от $N_{\eA},N_{\eB},N_t,N_{\eA\eB},d$: 
$$\rho=\rho(N_{\eA}, N_{\eB}, N_t, N_{\eA\eB}, d)$$
  \subsection{Определение Т-Паттерна}
Дадим рекурсивное определение Т-Паттерна. Договоримся называть каждое допустимое событие {\itshape псевдопаттерном}. 
Тогда Т-Паттерн ${\bf Q}$ можно определить как:
 $${\bf Q}={\bf X_1}[dL_1, dR_1]{\bf X_2}[dL_2, dR_2]\dots {\bf X_i}[dL_i, dR_i]{\bf X_{i+1}}\dots {\bf X_m},$$
 $$
Events({\bf Q})=
  \begin{cases}
    \{ Events( {\bf X_1} ),\dots Events({\bf X_m})\}, & \text{если ${\bf Q}$~--- Т-Паттерн}\\
    Q, & \text{если ${\bf Q}$~--- событие (псевдопаттерн)}
  \end{cases}
$$ 
где ${\bf X_i},(i=1\dots m)$~--- Т-Паттерн, или псевдопаттерн. 
Для паттернов отношение критического интервала ${\bf Q_L}[dL, dR]{\bf Q_R}$ вводится, как и для событий, с учетом того, 
что интервал $[dL, dR]$ отсчитывается от последнего элемента ${\bf Q_L}$, и вхождение ${\bf Q_R}$ определяется его первым элементом.  
Будем называть {\itshape двойными сериями(double series, DS)} паттерна ${\bf Q}$, множество $\{\{Left_i, Right_i \}_{ i=1\dots N_Q}\}$, где $N_Q$~--- количество 
появлений паттерна ${\bf Q}$, $Left_i, Right_i$~--- индексы начального и конечного событий $i$-го появления паттерна ${\bf Q}$. 
\section{Алгоритм поиска Т-Паттернов}

Алгоритм поиска Т-Паттернов, описанный ниже, заключается в итеративном повторении двух стадий: конструирование новых паттернов и удаление
неполных паттернов. На выходе алгоритм выдает множество Т-Паттернов с их сопутствующими характеристиками: критическим интервалом, уровнем 
значимости, частотой встречаемости.

Будем обозначать как $\mathcal{D}_{i}$ множество паттернов, обнаруженных к $i$-ой итерации. Фактически, множество
$$\mathcal{D}_{m}\setminus\mathcal{E},$$ где $m$~--- номер последней итерации, и будет результатом работы алгоритма. 
\begin{trivlist}
 \item {\bf Стадия 1: Поиск и конструирование}:
\\
На данном шаге, для любой упорядоченной пары $$({\bf Q'},{\bf Q''}), {\bf Q'},{\bf Q''}\in\mathcal{D}_i,$$ проверяется существование критической
связи. Если критическая связь $[d_{\bf L},d_{\bf R}]$ была найдена, и паттерн $({\bf Q'}{\bf Q''})$ встречается чаще, чем $N_{min}$ раз, 
 то в множество $\mathcal{D}_{i+1}$ дообавляется новый паттерн
${\bf Q'}[d_{\bf L]},d_{\bf R}]{\bf Q''}$.

Однако такие действия приводят к тому, что один и тот же паттерн ${\bf ABCD}$ может быть сконструирован разными способами (например как
$({\bf A}({\bf BCD}))$ и $(({\bf AB})({\bf CD}))$), что ведет к заполнению множества $\mathcal{D}$ лишними паттернами, и как следствие, к 
замедлению работы программы. Для избежания данной проблемы предлагается следующее решение: паттерн $({\bf Q'Q''})$ добавляется в множество
$\mathcal{D}$ тогда и только тогда, когда не существует паттерна ${\bf P}$ из $\mathcal{D}$ такого, что $Events({\bf P})=Events(({\bf Q'Q''}))$
и $Events({\bf P})=Events(({\bf Q'Q''}))$. Другими словами, найденный паттерн, перед добавлением, сравнивается с уже существующими паттернами
и проверяется, не является ли он другим представлением паттерна, найденного ранее.
\item {\bf Стадия 2: Удаление неполных паттернов}:
\\
На данной стадии алгоритм стремится удалить найденные паттерны, являющиеся меньшими частями, или неполными версиями других
обнаруженных паттернов. Для индикации таких паттернов можно применять разные эвристики. 
Ниже опишем условие, взятое из статьи~\cite{magnusson_orig}.

Итак, паттерн ${\bf Q_x}$ считается менее полным, чем ${\bf Q_y}$, если ${\bf Q_x}$ и ${\bf Q_y}$ появляются одинаково часто, и все события
возникающие в ${\bf Q_x}$, также возникают в ${\bf Q_y}$. 
\end{trivlist}
  
\subsection{Формальное описание}
  \begin{algorithmic}[1]

\Require 

\begin{description}
 \item [$\mathcal{E}$]~--- допустимые события,
 \item [$N_t$]~--- продолжительность наблюдения,
 \item [$\alpha$]~--- минимальный уровень значимости, 
 \item [$N_{min}$]~--- минимальное количество вхождений паттерна.
\end{description}

\State $\mathcal{D}_{-1}=\varnothing$
\State $\mathcal{D}_0=\mathcal{E}$ \Comment {Инициализируем множество паттернов}
\State $t=0$
\While  {$\mathcal{D}_t\neq\mathcal{D}_{t-1}$}
\State $t=t+1$
\State  $\mathcal{D}_t=\mathcal{D}_{t-1}$
  \For{ $P_L \in \mathcal{D}_{t-1}$ } \Comment{Стадия 1}
    \For{ $P_R \in \mathcal{D}_{t-1}$ }
      \ForAll{ $d_L, d_R \in [1,N_t]$ таких, что $d_L\leqslant d_R$ }
	\If{ $\rho( N_{P_L}, N_{P_R}, N_t, N_{P_LP_R}, d_R-d_L+1 ) < \alpha$ }
	  \If{ isUnique($P_L\cup P_R, \mathcal{D}_t $) }
	    \State $\mathcal{D}_t = \mathcal{D}_t \cup \{P_L \cup P_R\}$
	  \EndIf
	\EndIf
      \EndFor
    \EndFor
  \EndFor
\For{ $P_L \in \mathcal{D}_{t}\setminus\mathcal{E}$ }\Comment{Стадия 2}
    \For{ $P_R \in \mathcal{D}_{t}$ }
      \If{ $P_L\subset P_R$\footnote{Имеется в виду упорядоченная вложенность множеств. Т.е. $abd\subset abcd$, но $bdc\not\subset abcd$ } {\bf and} |DS($P_L$)|=|DS($P_R$)| 
{\bf and} isIntersect($P_L, P_R$)} 
	\State удалить $P_L$ из $\mathcal{D}_t$
      \EndIf
    \EndFor
\EndFor
\EndWhile
\Function{isUnique}{$Q, \mathcal{D}$}
  \For{$P \in \mathcal{D}$}
    \If{ DS($Q$)=DS($P$) {\bf and} Events($Q$)=Events($P$) }
      \State {\bf return false} 
    \EndIf
  \EndFor
  \State {\bf return true}
\EndFunction
\Function{isIntersect}{$P_L, P_R$}
  \For{$i=1\dots|DS(P_L)|$}
    \If{ $DS_{i,Left}(P_L)$>$DS_{i,Right}(P_R)$ {\bf or} $DS_{i,Right}(P_L)<DS_{i,Left}(P_R)$}
	\State {\bf return false}
    \EndIf
    \State {\bf return true}
  \EndFor
  \State {\bf return true}
\EndFunction
  \end{algorithmic}
\subsection{О параметрах $\alpha$ и $N_{min}$}

Так как для задачи поиска Т-Паттернов не вводится определение качества найденных паттернов, то алгоритм требует ручной настройки
параметров $\alpha$ и $N_{min}$. Выбор значений параметров должен основываться на специфике наблюдаемых процессов и ожидаемых 
результатов. Однако выбор значений $\alpha=0.005$ и $N_{min}=3$ обычно удовлетворителен~\cite[с. 99]{magnusson_orig}. 
Для более тонкой настройки поиска, можно использовать разные $\alpha$ и $N_{min}$ для паттернов разной длины. 
Например, при значениях $\alpha=0.00001$, $N_{min}=7$ для паттернов длины 2, и $\alpha=0.005$, $N_{min}=3$ для паттернов длины 3 и более, 
алгоритм найдет только несколько самых ярко выраженных патернов длины 2, и уже потом будет конструировать множество более длинных паттернов.
\subsection{Случайные паттерны}

Когда исследуются действительно большие наборах данных, то Т-Паттерны могут возникать даже, если данные были сгенерированы случайно. 
Поэтому для найденного множества паттернов бьло бы полезно оценить, являются ли эти паттерны случайными, или <<структурными>>. 
Одним из подходов к решению данной задачи, является анализ рандомизированных данных:

По множеству $\mathcal{E}$ строится сножество $\mathcal{E}'$: $$\mathcal{E}'=\{rand(\eA)|A\in\mathcal{E}\}, \text{где}$$ 
$$rand(\eA)= \eA' : TS(\eA')=\{\xi_1,\dots,\xi_{N_{\eA}}\} $$ 
$$  \xi_1,\dots,\xi_{N_{\eA}}\sim{\bf U}[1,N_t].$$

Проще говоря, создаются данные с таким же периодом наблюдения и мощностью множества допустимых событий, но для каждого допустимого события,
моменты времени его появления генерирутся случайно с вероятностью появления $N_{\eA}/N_t$.

Для полученного множества $\mathcal{E}'$ применятеся процесс поиска паттернов с {\itshape теми же параметрами}, которые применялись на исходных 
даных. 
Описанные действия исполняются несколько раз,
после чего, результаты поиска на рандомизированных данных сравниваются с результатами на исходных данных. 
 